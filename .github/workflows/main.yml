name: Build + Lint

on: push

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.4

      - name: Install Sphinx
        run: pip install sphinx

      - name: Install Asciidoctor
        run: gem install asciidoctor

      - name: Install XSLTProc
        run: choco install xsltproc

      - name: Install DITA-OT
        run: |
          curl -fsSL -o C:\dita-ot-3.4.zip 
          7z x C:\dita-ot-3.4.zip -y -r -oC:\dita
          set PATH=C:\dita\dita-ot-3.4\bin;%PATH%

      - name: Test
        run: |
          make setup
          make build os=windows exe=vale.exe
          make test

  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: Install Chocolatey
        run: |
          mkdir -p /opt/chocolatey
          wget -q -O - "https://github.com/chocolatey/choco/releases/download/${CHOCOLATEY_VERSION}/chocolatey.v${CHOCOLATEY_VERSION}.tar.gz" | tar -xz -C "/opt/chocolatey"
          echo '#!/bin/bash' >> /usr/local/bin/choco
          echo 'mono /opt/chocolatey/choco.exe $@' >> /usr/local/bin/choco
          chmod +x /usr/local/bin/choco
        env:
          CHOCOLATEY_VERSION: 1.3.1

      - name: Test Chocolatey
        run: |
          choco help

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: v1.18.2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}

  lint:
    name: runner / vale
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: errata-ai/vale-action@reviewdog
        with:
          files: README.md
          debug: true
          fail_on_error: true
          reporter: github-check
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
